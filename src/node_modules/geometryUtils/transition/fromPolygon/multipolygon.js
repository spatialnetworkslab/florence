import { splitOuterRing } from '../transitionLogic/splitLinearRings.js'
import polygonToPolygon from './polygon.js'

export default function MultiPolygon (fromPolygon, toMultiPolygon) {
  let fromRing = fromPolygon.coordinates[0]
  let toRings = toMultiPolygon.coordinates.map(polygon => polygon[0])

  let fromRings = splitOuterRing(fromRing, toRings)

  let interpolatorArray = []

  for (let i = 0; i < fromRings.length; i++) {
    let fromPolygon = {
      type: 'Polygon',
      coordinates: [fromRings[i]]
    }

    let toPolygon = {
      type: 'Polygon',
      coordinates: toMultiPolygon.coordinates[i]
    }

    interpolatorArray.push(polygonToPolygon(fromPolygon, toPolygon))
  }

  return createInterpolator(interpolatorArray)
}

function createInterpolator (interpolatorArray) {
  return function (time) {
    let interpolatedValues = []

    for (let i = 0; i < interpolatorArray.length; i++) {
      let interpolator = interpolatorArray[i]
      let interpolatedPolygon = interpolator(time)
      interpolatedValues.push(interpolatedPolygon.coordinates)
    }

    return {
      type: 'MultiPolygon',
      coordinates: interpolatedValues
    }
  }
}

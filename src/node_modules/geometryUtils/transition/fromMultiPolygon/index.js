import { splitOuterRing } from '../transitionLogic/splitLinearRings.js'
import polygonToPolygon from '../fromPolygon/polygon.js'

export function Polygon (fromMultiPolygon, toPolygon) {
  let fromRings = fromMultiPolygon.coordinates.map(polygon => polygon[0])
  let toRing = toPolygon.coordinates[0]

  let toRings = splitOuterRing(toRing, fromRings)

  let interpolatorArray = []

  for (let i = 0; i < toRings.length; i++) {
    let fromPolygon = {
      type: 'Polygon',
      coordinates: fromMultiPolygon.coordinates[i]
    }

    let toPolygon = {
      type: 'Polygon',
      coordinates: [toRings[i]]
    }

    interpolatorArray.push(polygonToPolygon(fromPolygon, toPolygon))
  }

  return createInterpolator(fromMultiPolygon, toPolygon, interpolatorArray)
}

function createInterpolator (from, to, interpolatorArray) {
  return function (time) {
    if (time === 0) return from
    if (time === 1) return to

    let interpolatedValues = []

    for (let i = 0; i < interpolatorArray.length; i++) {
      let interpolator = interpolatorArray[i]
      let interpolatedPolygon = interpolator(time)
      interpolatedValues.push(interpolatedPolygon.coordinates)
    }

    return {
      type: 'MultiPolygon',
      coordinates: interpolatedValues
    }
  }
}

export function MultiPolygon (fromPolygon, toMultiPolygon) {
  // TODO
}

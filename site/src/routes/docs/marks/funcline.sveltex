# FuncLine

The `FuncLine` mark can be used to plot functions over intervals. It is the only mark that does not have a corresponding layer element.

```markup
<script>
  import { Graphic, FuncLine, XAxis, YAxis } from '@snlab/florence'
</script>

<Graphic 
  width={200}
  height={200}
  scaleX={[0, 10]}
  scaleY={[0, 10]}
  padding={20}
  flipY
>

  <FuncLine func={x => Math.exp(x / 4)} stroke={'red'} />

  <XAxis />
  <YAxis />

</Graphic>
```

```js exec
import SimpleExample from './examples/_FuncLineSimple.svelte'
```

<SimpleExample />

## Properties

### Positioning

| Name | Required |  Type(s)   |   Default   |                        Unit(s)                        |
| ---- | -------- | ---------- | ----------- | ----------------------------------------------------- |
| func | `true`   | `Function` | `undefined` | -                                                    |
| x    | `false`  | `Number[]` | `undefined` | [Local coordinates](/docs/concepts/local-coordinates) |

To render `FuncLine`, a `Function` that maps a numeric input to a numeric output has to be passed to the `func` prop. By default, this function will be plotted over a domain that is inherited from the parent `Graphic` or `Section`. To provide a different custom domain, the `x` prop can be passed an `Array` containing two numbers. For example:

```markup
<script>
  import { Graphic, FuncLine, XAxis, YAxis } from '@snlab/florence'
  const pi = Math.PI
</script>

<Graphic 
  width={200}
  height={200}
  scaleX={[-2 * pi, 2 * pi]}
  scaleY={[-2, 2]}
  padding={20}
>

  <FuncLine func={Math.sin} x={[-pi, pi]} />

  <XAxis />
  <YAxis />

</Graphic>
```

```js exec
import FuncLineDomain from './utils/_FuncLineDomain.svelte'
```

<FuncLineDomain />

::: div callout
The `FuncLine` only works if its parent `Graphic` or `Section`'s scales have quantitative domains.
:::

### Aesthetics

|    Name     | Required | Type(s)  |   Default   |           Unit(s)            |
| ----------- | -------- | -------- | ----------- | ---------------------------- |
| stroke      | `false`  | `String` | `'#000000'` | Named, hex, rgb or hsl color |
| strokeWidth | `false`  | `Number` | `3`         | Pixel                        |
| opacity     | `false`  | `Number` | `1`         | Number between 0 and 1       |

These aesthetic props are similar to attributes of the SVG [line](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/line) element. The analogous `line` attributes are shown below in brackets:

- `stroke` refers to the color of the line
- `strokeWidth` refers to the width of the line
- `strokeOpacity` refers to the transparency of the line, `0` being fully transparent

### Transitions

|    Prop    | Required |      Type(s)       |   Default   |             Unit(s)              |
| ---------- | -------- | ------------------ | ----------- | -------------------------------- |
| transition | `false`  | `Number`, `Object` | `undefined` | Duration in ms or options object |

See the [transition](/docs/concepts/transitions) documentation for more information.

### Interactions

#### Mouse events

|    Prop     | Required |  Type(s)   |   Default   | Unit(s) |
| ----------- | -------- | ---------- | ----------- | ------- |
| onClick     | `false`  | `Function` | `undefined` | -      |
| onMousedown | `false`  | `Function` | `undefined` | -      |
| onMouseup   | `false`  | `Function` | `undefined` | -      |
| onMouseover | `false`  | `Function` | `undefined` | -      |
| onMouseout  | `false`  | `Function` | `undefined` | -      |
| onMousedrag | `false`  | `Function` | `undefined` | -      |

#### Touch events

|    Prop     | Required |  Type(s)   |   Default   | Unit(s) |
| ----------- | -------- | ---------- | ----------- | ------- |
| onTouchdown | `false`  | `Function` | `undefined` | -      |
| onTouchup   | `false`  | `Function` | `undefined` | -      |
| onTouchover | `false`  | `Function` | `undefined` | -      |
| onTouchout  | `false`  | `Function` | `undefined` | -      |
| onTouchdrag | `false`  | `Function` | `undefined` | -      |

#### Select events

|    Prop    | Required |  Type(s)   |   Default   | Unit(s) |
| ---------- | -------- | ---------- | ----------- | ------- |
| onSelect   | `false`  | `Function` | `undefined` | -      |
| onDeselect | `false`  | `Function` | `undefined` | -      |

See the [interactivity](/docs/concepts/interactivity) documentation for more information.

### Other

|      Prop       | Required |  Type(s)  |   Default   | Unit(s) |
| --------------- | -------- | --------- | ----------- | ------- |
| renderSettings  | `false`  | `Object`  | `undefined` | -      |
| blockReindexing | `false`  | `Boolean` | `false`     | -      |
| clip            | `false`  | `Boolean` | `true`      | -      |

- `renderSettings`: see the [advanced rendering](/docs/concepts/advanced-rendering) documentation for more information
- `blockReindexing`: see the [interactivity](/docs/concepts/interactivity) documentation for more information.
- `clip`: indicates whether the Mark should be clipped off if it extends beyond its parent `Section` or `Graphic` viewport (i.e. the area within the padding). 

## Examples

The `FuncLine` is not featured in any examples yet!

# Point

The `Point` mark is used to plot simple points. It is a special case of the more general `Symbol` mark that is made available on its own for convenience.

```markup
<script>
  import { Graphic, Point, PointLayer, XAxis, YAxis } from '@snlab/florence'
</script>

<Graphic width={200} height={200} scaleX={[0, 10]} scaleY={[0, 10]} padding={20}>

  <Point x={2.5} y={2.5} fill={'red'} />
  <PointLayer x={[5, 7.5]} y={[5, 7.5]} fill={'blue'} />

  <XAxis />
  <YAxis />

</Graphic>
```

```js exec
import SimpleExample from './examples/_PointSimple.svelte'
```
<SimpleExample />

## Properties

### Positioning

| Name | Required                      | Type(s)                                | Default     | Unit(s)                                               |
| x    | `if (geometry === undefined)` | `Number`, `String`, `Date`, `Function` | `undefined` | [Local coordinates](/docs/concepts/local-coordinates) |
| y    | `if (geometry === undefined)` | `Number`, `String`, `Date`, `Function` | `undefined` | [Local coordinates](/docs/concepts/local-coordinates) |
| x    | `if (x === undefined && y === undefined)` | GeoJSON [Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) feature | `undefined` | [Local coordinates](/docs/concepts/local-coordinates) |

To render the Point mark, you will need to provide either the `x` and `y` props, or the `geometry` prop. The two uses are mutually exclusive. The `x` and `y` coordinates, or the equivalent coordinates in the GeoJSON feature passed to `geometry`, refer to the center of the point.

`x` and `y` can be of type `Number`, `String` and `Date`, depending on the scales used in the parent Section. `geometry` accepts GeoJSON [Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) features only. Coordinates inside the GeoJSON geometry will similarly be treated as unscaled.  For all positioning props,  a function can be supplied that bypasses the scaling step- see the [local coordinates](/docs/concepts/local-coordinates) documentation. When using the `PointLayer`, all positioning props will be supplied as `Array`s of `Number`s, `String`s and `Date`s, or functions that return these- see the [Marks versus Layers](/docs/concepts/marks-vs-layers) documentation.

### Aesthetics

| Prop          | Required | Types  | Default   | Description    | Unit(s)                    |
| ------------- | -------- | ------ | --------- | -------------- | -------------------------- |
| radius        | false    | Number | 3         | Radius length  | Screen pixel               |
| stroke        | false    | String | 'none'    | Stroke color   | Named color, hex, rgb, hsl |
| strokeWidth   | false    | Number | 0         | Stroke width   | Screen pixel               |
| strokeOpacity | false    | Number | undefined | Stroke opacity | Number between 0 and 1     |
| fill          | false    | String | '#000000' | Fill color     | Named color, hex, rgb, hsl |
| fillOpacity   | false    | Number | undefined | Fill opacity   | Number between 0 and 1     |
| opacity       | false    | Number | 1         | Mark opacity   | Number between 0 and 1     |

These are analogous to the CSS properties of the same names.

### Other

## Examples
# Point

The `Point` mark is used to plot simple points. It is a special case of the more general [Symbol](/docs/marks/symbol) mark that is made available on its own for convenience. Its most common applications are scatterplots and point coordinates on a map, but as the [examples](#examples) illustrate all kinds of graphics can be made with the humble `Point`.

```markup
<script>
  import { Graphic, Point, PointLayer, XAxis, YAxis } from '@snlab/florence'
</script>

<Graphic width={200} height={200} scaleX={[0, 10]} scaleY={[0, 10]} padding={20}>

  <Point x={2.5} y={2.5} fill={'red'} />
  <PointLayer x={[5, 7.5]} y={[5, 7.5]} fill={['blue', 'green']} />

  <XAxis />
  <YAxis />

</Graphic>
```

```js exec
import SimpleExample from './examples/_PointSimple.svelte'
```
<SimpleExample />

## Properties

### Positioning

| Name |                 Required                  |                                  Type(s)                                   |   Default   |                      Unit(s)(s)                      |
| ---- | ----------------------------------------- | -------------------------------------------------------------------------- | ----------- | ---------------------------------------------------- |
| x    | `if (geometry === undefined)`             | `Number`, `String`, `Date`, `Function`                                     | `undefined` | [Local coordinate](/docs/concepts/local-coordinates) |
| y    | `if (geometry === undefined)`             | `Number`, `String`, `Date`, `Function`                                     | `undefined` | [Local coordinate](/docs/concepts/local-coordinates) |
| geometry    | `if (x === undefined && y === undefined)` | GeoJSON [Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) feature | `undefined` | [Local coordinate](/docs/concepts/local-coordinates) |

To render a `Point`, you will need to provide either the `x` and `y` props, or the `geometry` prop. The two uses are mutually exclusive. The `x` and `y` coordinates, or the coordinates in the GeoJSON feature passed to `geometry`, refer to the center of the point.

`x` and `y` can be of type `Number`, `String` and `Date`, depending on the scales used in the parent Section. `geometry` accepts GeoJSON [Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) features only. Coordinates inside the GeoJSON geometry will similarly be treated as unscaled.  For all positioning props,  a function can be supplied that bypasses the scaling step- see the [local coordinates](/docs/concepts/local-coordinates) documentation. When using the `PointLayer`, all positioning props will be supplied as `Array`s of `Number`s, `String`s and `Date`s, or functions that return these- see the [marks versus layers](/docs/concepts/marks-vs-layers) documentation.

### Aesthetics

|     Name      | Required | Type(s)  |   Default   |           Unit(s)            |
| ------------- | -------- | -------- | ----------- | ---------------------------- |
| radius        | `false`  | `Number` | `3`         | Pixel                        |
| fill          | `false`  | `String` | `'#000000'` | Named, hex, rgb or hsl color |
| fillOpacity   | `false`  | `Number` | `undefined` | Number between 0 and 1       |
| stroke        | `false`  | `String` | `'none'`    | Named, hex, rgb or hsl color |
| strokeWidth   | `false`  | `Number` | `0`         | Pixel                        |
| strokeOpacity | `false`  | `Number` | `undefined` | Number between 0 and 1       |
| opacity       | `false`  | `Number` | `1`         | Number between 0 and 1       |

These aesthetic props are similar to attributes of the SVG [circle](https://www.w3schools.com/graphics/svg_circle.asp) element. The analogous `circle` attributes are shown below in brackets:

- `radius`, unsurprisingly, refers to the radius of the point (`r`) 
- `fill` refers to the color of the point (`fill`)
- `fillOpacity` refers to the transparency of the point, `0` being fully transparent (`fill-opacity`)
- `stroke` refers to the color of the point's outline (`stroke`)
- `strokeWidth` refers to the width of the point's outline (`stroke-width`)
- `strokeOpacity` refers to the transparency of the point's outline, `0` being fully transparent (`stroke-opacity`)
- `opacity` sets both the `strokeOpacity` and the `fillOpacity` (`opacity`)

### Transitions

### Interactions

### Other

## Examples

The `Point` and `PointLayer` can be seen in action in the following examples:

- [Simple scatterplot](/examples/plain-scatterplot)
- [Categorical dot plot](/examples/categorical-dot)
- [Scatterplot with transition](/examples/scatterplot-transition)
- [Dubois plot](/examples/dubois-simple)
- [Brush](/examples/brush)
- [Gapminder](/examples/gapminder)
- [Density contours](/examples/density-contours)
- [Global temperature trends](/examples/scatterplot-temp-trends)

# Section

The `Section` is one of the corner stones of `florence`. It is used to:

- define local coordinate systems
- apply coordinate transformations
- specify zooming and panning behavior
- enable interactions

```markup
<Section>

    ...

</Section>
```

## Caveats

- `Section`s can be nested, but
- a `Section` with a coordinate transformation can only contain marks, layers and axes

## Props

### Positioning

| Prop |        Required         |                 Types                  |   Default   |                       Unit(s)                        |
| ---- | ----------------------- | -------------------------------------- | ----------- | ---------------------------------------------------- |
| x1   | `if (x2 !== undefined)` | `Number`, `String`, `Date`, `Function` | `undefined` | [Local coordinate](/docs/concepts/local-coordinates) |
| x2   | `if (x1 !== undefined)` | `Number`, `String`, `Date`, `Function` | `undefined` | [Local coordinate](/docs/concepts/local-coordinates) |
| y1   | `if (y2 !== undefined)` | `Number`, `String`, `Date`, `Function` | `undefined` | [Local coordinate](/docs/concepts/local-coordinates) |
| y2   | `if (y1 !== undefined)` | `Number`, `String`, `Date`, `Function` | `undefined` | [Local coordinate](/docs/concepts/local-coordinates) |

It is possible to use the `Section` without providing any of the positioning props. This will result in the `Section` inheriting the extents of the parent `Section` or `Graphic`, taking padding into account. For example,

```svelte
<Graphic width={500} height={500}>
  
  <Section padding={20}>
    
    <Section>

      ...

    </Section>

  </Section>

</Graphic>
```

is equivalent to

```svelte
<Graphic width={500} height={500}>
  
  <Section
    x1={0}
    x2={500}
    y1={0}
    y2={500}
    padding={20}
  >
    
    <Section
      x1={20}
      x2={480}
      y1={20}
      y2={480}
    >

      ...

    </Section>

  </Section>

</Graphic>
```

It is also allowed to provide just the `x1` and `x2`, or just the `y1` and `y2` props.
But providing only `x1` and `x2`, for example, is not allowed:

```svelte
<Section x1={50} x2={450}></Section> <!-- Fine -->
<Section x1={50}></Section> <!-- Not allowed -->
```

In the examples above, no local coordinate systems are being used, so everything is in
screen pixels. If the parent `Graphic` or `Section` has specified a local coordinate system,
the positioning props would have to be defined in local coordinates. For example:

```svelte
<Graphic
  width={500}
  height={500}
  scaleX={scaleLinear().domain([0, 10])}
  scaleY={scaleLinear().domain([0, 10])}
>

  <Section
    x1={1} x2={9}
    y1={1} y2={9}
  >

    ...

  </Section>

</Graphic>
```

would be equivalent to:

```svelte
<Graphic
  width={500}
  height={500}
>

  <Section
    x1={50} x2={450}
    y1={50} y2={450}
  >

    ...

  </Section>

</Graphic>
```

### Aesthetics

|      Prop       | Required | Type(s)  |   Default   |            Units             |
| --------------- | -------- | -------- | ----------- | ---------------------------- |
| backgroundColor | `false`  | `String` | `undefined` | Named, hex, rgb or hsl color |
| paddingColor    | `false`  | `String` | `undefined` | Named, hex, rgb or hsl color |

Where `backgroundColor` is the area within the padded area, and `paddingColor` is the background of the padded area (see `padding` below).

### Local coordinate system

|      Prop      | Required |      Type(s)       |   Default    |                  Unit(s)                   |
| -------------- | -------- | ------------------ | ------------ | ------------------------------------------ |
| scaleX         | `false`  | `Function`         | `undefined`  | [d3 scale](https://github.com/d3/d3-scale) |
| scaleY         | `false`  | `Function`         | `undefined`  | [d3 scale](https://github.com/d3/d3-scale) |
| transformation | `false`  | `String`           | `'identity'` | Should be either `'identity'` or `'polar'` |
| flipX          | `false`  | `Boolean`          | `false`      | -                                          |
| flipY          | `false`  | `Boolean`          | `false`      | -                                          |
| padding        | `false`  | `Number`, `Object` | `undefined`  | Pixel                                      |
| zoomIdentity   | `false`  | `Object`           | `undefined`  | -                                          |

For more how to use these props, see the [local coordinates](/docs/concepts/local-coordinates) documentation.

### Interactions

#### Mouse events

|    Prop     | Required |  Type(s)   |   Default   | Unit(s) |
| ----------- | -------- | ---------- | ----------- | ------- |
| onClick     | `false`  | `Function` | `undefined` | -      |
| onMousedown | `false`  | `Function` | `undefined` | -      |
| onMouseup   | `false`  | `Function` | `undefined` | -      |
| onMouseover | `false`  | `Function` | `undefined` | -      |
| onMouseout  | `false`  | `Function` | `undefined` | -      |
| onMousedrag | `false`  | `Function` | `undefined` | -      |

#### Touch events

|    Prop     | Required |  Type(s)   |   Default   | Unit(s) |
| ----------- | -------- | ---------- | ----------- | ------- |
| onTouchdown | `false`  | `Function` | `undefined` | -      |
| onTouchup   | `false`  | `Function` | `undefined` | -      |
| onTouchover | `false`  | `Function` | `undefined` | -      |
| onTouchout  | `false`  | `Function` | `undefined` | -      |
| onTouchdrag | `false`  | `Function` | `undefined` | -      |

#### Select events

|    Prop    | Required |  Type(s)   |   Default   | Unit(s) |
| ---------- | -------- | ---------- | ----------- | ------- |
| onSelect   | `false`  | `Function` | `undefined` | -      |
| onDeselect | `false`  | `Function` | `undefined` | -      |

See the [interactivity](/docs/concepts/interactivity) documentation for more information.

### Other

|      Prop       | Required |  Type(s)  | Default | Unit(s) |
| --------------- | -------- | --------- | ------- | ------- |
| blockReindexing | `false`  | `Boolean` | `false` | -       |
| clip            | `false`  | `Boolean` | `true`  | -       |

The purpose of `blockReindexing` is explained in the [interactivity](/docs/concepts/interactivity) documentation. `clip` indicates whether the marks or layers inside of this `Graphic` should be clipped off if they extends this `Graphic`'s viewport (i.e. the area within the padding).

## Methods

- `selectRectangle`
- `updateSelectRectangle`
- `resetSelectRectangle`
- `startSelectPolygon`
- `addPointToSelectPolygon`
- `moveSelectPolygon`
- `resetSelectPolygon`

`Section` methods can be used as follows:

```js
let section

section.selectRectangle(...)
```

```html
<Section bind:this={section}>

</Section>
```

For more information on `Section` methods and how to use them to create advanced interactions like selection or brushing, check out the [interactivity](/docs/concepts/interactivity) documentation.

# Grid

The Grid component is used to quickly position and align 'square' components in a grid format. 'Square' here refers to any component that has x1, x2, y1 and y2 props. This includes the Section component, the Rectangle mark, and any custom component that you would want to create, given it has the props mentioned above.

```markup
<script>
 const colors = ['red', 'blue', 'green', 'orange']
</script>
<Graphic {width} {height}>
  <Grid
      {columns}
      {rows}
      names={colors}
      let:cells
  >
      {#each colors as color}
          <Section {...cells[color]} backGroundColor={color}>
          </Section>
      {/each}
  </Grid>
</Graphic>
```

```js exec
import SimpleExample from './examples/_GridSimple.svelte'
```

<SimpleExample />

## Properties

### Positioning

| Prop |        Required         |                 Types                  |   Default   |                       Unit(s)                        |
| ---- | ----------------------- | -------------------------------------- | ----------- | ---------------------------------------------------- |
| x1   | `if (x2 !== undefined)` | `Number`, `String`, `Date`, `Function` | `undefined` | [Local coordinate](/docs/concepts/local-coordinates) |
| x2   | `if (x1 !== undefined)` | `Number`, `String`, `Date`, `Function` | `undefined` | [Local coordinate](/docs/concepts/local-coordinates) |
| y1   | `if (y2 !== undefined)` | `Number`, `String`, `Date`, `Function` | `undefined` | [Local coordinate](/docs/concepts/local-coordinates) |
| y2   | `if (y1 !== undefined)` | `Number`, `String`, `Date`, `Function` | `undefined` | [Local coordinate](/docs/concepts/local-coordinates) |

The `Grid` positioning props behave the same way as the [Section](/docs/core/section)
positioning props.

### Grid settings

|   Prop    | Required |  Type(s)   |   Default   | Unit(s) |
| --------- | -------- | ---------- | ----------- | ------- |
| rows      | `false`  | `Number`   | `1`         | Integer |
| columns   | `false`  | `Number`   | `1`         | Integer |
| rowGap    | `false`  | `Number`   | `0`         | Integer |
| columnGap | `false`  | `Number`   | `0`         | Integer |
| names     | `true`   | `String[]` | `undefined` |         |

### Other

|       Prop       | Required |  Type(s)  | Default | Unit(s) |
| ---------------- | -------- | --------- | ------- | ------- |
| viewGridTemplate | `false`  | `Boolean` | `false` | -       |
| viewGridShape    | `false`  | `Boolean` | `false` | -       |

### Slot Scope

Grid exposes value called `cells` using the `let:cells` syntax. The `cells` object holds a series of objects in which the key is the 'area name' element in `areaNames` array and the value is a position object that will be used to position the cells of the grid. This uses the [native Svelte slot syntax](https://svelte.dev/docs#slot_let). It is this `cells` object that can be used to position the children or cells of the Grid (i.e. `Section` components) in their corresponding cell. 

```svelte
{
  "plot-1":{
    x1,
    y1,
    x2,
    y2
  },
  "plot-2":{
    x1,
    y1,
    x2,
    y2
  },
  ....
}
```

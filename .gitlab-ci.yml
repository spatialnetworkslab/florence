image: node:16

stages:
    - test
    - build
    - deploy

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

run-unit-test:
  stage: test
  variables:
    CYPRESS_INSTALL_BINARY: 0
  cache:
    paths:
      - node_modules/
      - .npm
  script:
    - npm install
    - npm run test:unit:ci
  artifacts:
    when: always
    paths:
      - coverage
    reports:
      junit:
        - junit.xml

run-integration-test:
  image: cypress/browsers:node12.19.0-chrome86-ff82
  stage: test
  only:
    - merge_requests
  variables:
    npm_config_cache: "$CI_PROJECT_DIR/.npm"
    CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
  cache:
    paths:
      - node_modules/
      - .npm
      - cache/Cypress
  script:
    - npm ci
    - npm run test:integration:ci
  artifacts:
    when: always
    reports:
      junit:
        - junit-integration*.xml


build_site:
  stage: build
  script:
    - cd site/
    - npm install
    - npm run export
    - mkdir ../public/ || true
    - cp -a __sapper__/export/* ../public/
  artifacts:
    paths:
      - public
  cache:
    paths:
      - site/node_modules/
  only:
  - master

push_keycdn:
  stage: deploy
  variables:
    KEYCDN_USER: "atepoorthuis"
    KEYCDN_ZONE_NAME: "florence"
  script:
    - apt-get update && apt-get install rsync brotli -y
    - eval $(ssh-agent -s)
    - echo "$SSH_DEPLOY_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo 'rsync.keycdn.com,185.172.149.122 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFM7Jqs3BqC+MSEoVsZ+YMKTjVIMTSKlZX2+0t88o4LZvd+BWt71SkXv4mQr7xKD59m7jeJcWiO43u7YQzi+Tgg=' >> ~/.ssh/known_hosts
    - find public -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|css\)$' -exec gzip -f -k {} \;
    # - find public -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|css\)$' -exec brotli -f -k {} \;
    - rsync -rtvz --chmod=D2755,F644 --delete public/ ${KEYCDN_USER}@rsync.keycdn.com:${KEYCDN_ZONE_NAME}/
  only:
  - master

.renovate:
  variables:
    RENOVATE_GIT_AUTHOR: "${GITLAB_USER_NAME} <${GITLAB_USER_EMAIL}>"
    RENOVATE_DRY_RUN: "false"
    RENOVATE_LOG_LEVEL: "info"
  image:
    name: renovate/renovate
    entrypoint: [""]
  script:
    - >
      node /usr/src/app/dist/renovate.js
      --platform "gitlab"
      --endpoint "${CI_API_V4_URL}"
      --git-author "${RENOVATE_GIT_AUTHOR}"
      --dry-run "${RENOVATE_DRY_RUN}"
      "${CI_PROJECT_PATH}"
  only:
    - master
    - schedules

Renovate:
  extends: .renovate


# the below doesn't work with absolute links so disable for now
# pages:preview:
#   stage: deploy
#   only:
#     - merge_requests
#   script:
#     - cd site/
#     - npm install
#     - npm run export
#   artifacts:
#     paths:
#       - site/__sapper__/export
#   cache:
#     paths:
#       - site/node_modules/
#   environment:
#     name: preview/${CI_COMMIT_REF_NAME}
#     url: https://$CI_PROJECT_NAMESPACE.gitlab.io/-/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/site/__sapper__/export/index.html